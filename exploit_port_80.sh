#!/bin/bash
# Engine: No.1 [ exploit-p80 ]

echo "Port 80 Exploit: Activated!"

# Create a directory to store screenshots from targets on port 80
mkdir -p $PROJECT_NAME/open_juicy_ports/80/screenshots

echo "Httpx: Resolving Live IP Address!"
# Scan IPs and save live ones to a file
cat "$PROJECT_NAME/open_juicy_ports/80/ips_port80.txt" | ./httpx -silent > "$PROJECT_NAME/open_juicy_ports/80/live_ips_port80.txt" 2>/dev/null
sleep 0.5

# Define variables for input and output files
port80_targets="$PROJECT_NAME/open_juicy_ports/80/ips_port80.txt"
live_port80_targets="$PROJECT_NAME/open_juicy_ports/80/live_ips_port80.txt"
port80_folder="$PROJECT_NAME/open_juicy_ports/80/screenshots"

echo "WebShot: Taking Screenshots of IP addresses!"
# Run the screenshot script and suppress output
node WebShot/screenshot.js -f "$live_port80_targets" -o "$port80_folder" > /dev/null 2>&1
echo "Screenshots Completed!"

echo "Ffuf: Started Searching Juicy files and Directories"
# Read each URL from targets.txt
while read -r url; do
    # Execute ffuf with the specified options and append results to results.txt
    ffuf -ac -fc 404,403 -w dirsearch.txt -u "$url/FUZZ" -v >> results.txt
done < "$live_port80_targets" 2>/dev/null

# Sort results and filter unique URLs, then overwrite results.txt
sort -u results.txt | grep -E '^https?://' > temp.txt && mv temp.txt results.txt


echo "Port 80 Scanning/Exploitation: Completed!"
